name: PowerShell CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest  # Windows環境のみを選択

    steps:
      # ソースコードをクローン
      - name: Checkout code
        uses: actions/checkout@v2

      # PnP PowerShellモジュールをインストール
      - name: Install PnP PowerShell module
        run: |
          Install-Module -Name PnP.PowerShell -Force -AllowClobber

      # Base64でエンコードされた証明書をデコードして保存
      - name: Decode and install the certificate
        run: |
          # GitHub Secretsから証明書をデコード
          $certBase64 = "${{ secrets.CERT_PFX }}"
          $certPassword = ConvertTo-SecureString "${{ secrets.CERT_PASSWORD }}" -AsPlainText -Force
          # デコードされた証明書をファイルとして保存
          [System.IO.File]::WriteAllBytes("mycert.pfx", [Convert]::FromBase64String($certBase64))

      # SharePointに接続
      - name: Connect to SharePoint using certificate
        run: |
          # 証明書のパスとパスワードを指定
          $certPath = "mycert.pfx"
          $certPassword = ConvertTo-SecureString "${{ secrets.CERT_PASSWORD }}" -AsPlainText -Force
          # 証明書をロード
          $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2($certPath, $certPassword)
          
          # PnP.PowerShellを使ってSharePointに接続
          $tenantId = "${{ secrets.TENANT_ID }}"
          $clientId = "${{ secrets.CLIENT_ID }}"
          $siteUrl = "https://adstest2025.sharepoint.com"
          Connect-PnPOnline -Url $siteUrl -ClientId $clientId -TenantId $tenantId -Certificate $cert
          
          Write-Host "Connected to SharePoint site: $siteUrl"

      # Pesterテストの実行
      - name: Run Pester tests
        run: |
          # Pesterテストの設定と実行
          $config = New-PesterConfiguration
          $config.Run.Path = ".\Functions.Tests.ps1"
          $config.CodeCoverage.Enabled = $true
          $config.CodeCoverage.Path = ".\Functions.psm1"
          Invoke-Pester -Configuration $config

      # カバレッジレポートをCodecovにアップロード
      - name: Upload coverage report to Codecov
        run: |
          .\codecov.exe -t ${{ secrets.CODECOV_TOKEN }} -f './coverage.xml' -R tmadvs/test0326
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
